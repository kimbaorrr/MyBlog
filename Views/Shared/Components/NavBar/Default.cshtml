@{
    var navBarViewModel = new NavBarViewModel
    {
        Links =
        {
            Contact = localizer["nav.contact"],
            CV = localizer["nav.cv"],
            Home = localizer["nav.home"],
            Project = localizer["nav.project"],
            Tool = localizer["nav.tool"]
        },
        LogoUrl = "/imgs/logo.png"
    };
    var currentLang = ViewBag.CurrentLang as string ?? string.Empty;
}
<!--Wide Screen Nav-->
@await Component.InvokeAsync("NavBar", new { viewName = "WideScreenNav", model = navBarViewModel })

<!--Feedback Modal-->
@await Component.InvokeAsync("FeedbackModal")


<!-- Mobile Nav -->
@await Component.InvokeAsync("NavBar", new { viewName = "MobileNav", model = navBarViewModel })


<script>
    $(document).ready(function () {
        function applyTheme(theme) {
            if (theme === "dark") {
                $("html").addClass("dark");
                $("#changeThemeBtn svg[name='light']").hide();
                $("#changeThemeBtn svg[name='dark']").show();
            } else {
                $("html").removeClass("dark");
                $("#changeThemeBtn svg[name='light']").show();
                $("#changeThemeBtn svg[name='dark']").hide();
            }

        }

        $("#changeThemeBtn").on("click", () => {
            const currentTheme = localStorage.getItem("theme") || "light";
            const newTheme = currentTheme === "light" ? "dark" : "light";
            localStorage.setItem("theme", newTheme);
            applyTheme(newTheme);
        });

        const currentTheme = localStorage.getItem("theme") || "light";
        applyTheme(currentTheme);

        $("#changeLanguageBtn").on("click", () => {
            const newLang = "@currentLang" === "vi" ? "en" : "vi";
            $.ajax({
                url: '@Url.Action("SetLanguage", "Language")',
                type: "post",
                data: {newLang: newLang},
                success: function () {
                    location.reload();
                }
            });
        });

        function openModal() {
            $('#feedbackModal').removeClass('hidden').addClass('flex');
        }

        function closeModal() {
            $('#feedbackModal').addClass('hidden').removeClass('flex');
        }

        $('#feedbackModalBtn').on("click", function () {
            openModal();
        });

        $('#feedbackModal button[aria-label="closeModal"]').click(function () {
            closeModal();
        });

        $('#feedbackForm').submit(function (e) {
            e.preventDefault();
            let $form = $(this);
            let formData = {
                Name: $form.find('input[name="Name"]').val(),
                Email: $form.find('input[name="Email"]').val(),
                Content: $form.find('textarea[name="Content"]').val(),
                __RequestVerificationToken: $form.find('input[name="__RequestVerificationToken"]').val(),
                Token: $form.find('input[name="Token"]').val()
            };
            $.ajax({
                url: $form.attr('action'),
                type: 'POST',
                data: formData,
                success: function (response) {
                    alert(response.message);
                    $form[0].reset();
                    hcaptcha.reset();
                },
                error: function (xhr) {
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        alert(xhr.responseJSON.message);
                    } else {
                        alert('Có lỗi xảy ra, vui lòng thử lại.');
                    }
                    hcaptcha.reset();
                }
            });
        });
    });
</script>









